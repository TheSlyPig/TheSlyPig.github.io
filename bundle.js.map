{"version":3,"sources":["webpack:///webpack/bootstrap 421e448c443aa88e9e62","webpack:///./lib/escape_the_core.js","webpack:///./lib/game.js","webpack:///./lib/line.js","webpack:///./lib/center.js","webpack:///./lib/player.js","webpack:///./node_modules/line-circle-collision/index.js","webpack:///./node_modules/point-circle-collision/index.js","webpack:///./lib/ui.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;AC7DA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;;;;;;;ACzSD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC7aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;AChMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC/CA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kC;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;;AAEA,qC;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 421e448c443aa88e9e62","import Game from './game.js';\nimport Ui from './ui.js';\n\nwindow.leftPressed = false;\nwindow.rightPressed = false;\nwindow.difficultyLevel = 1;\nwindow.muted = false;\n\nlet difficultyModifier = 1;\nlet rotateSpeed = 118;\nlet lineSpeed1 = 4.1;\nlet lineSpeed2 = 2.1;\nlet lineLifeTimer = 108;\nlet ballSpeed = .088;\n\nlet bgmStartTimes1 = [0, 30.23, 50.177, 75.77, 126.03];\nlet bgmStartTimes2 = [0, 32.34, 56.29, 77.65];\nlet bgmStartTimes3 = [0, 9.9, 29.7, 49.5, 89.07, 108.88];\n\nconst mainMenu = new Image();\nmainMenu.src = 'assets/images/MainMenu.png';\n\nconst menuBgm = new Audio('./assets/audio/Mangetsu.mp3');\nmenuBgm.loop = true;\n\nconst beginAudio = new Audio('./assets/audio/Begin.mp3');\nconst gameOverAudio = new Audio('./assets/audio/GameOver.mp3');\n\nmenuBgm.play();\n\nconst bgm1 = new Audio('./assets/audio/CODABuildingTheme.mp3');\nbgm1.loop = true;\n\nconst bgm2 = new Audio('./assets/audio/BattleTheme1.mp3');\nbgm2.addEventListener('timeupdate', function () {\n  var buffer = .412;\n  if (this.currentTime > this.duration - buffer) {\n    this.currentTime = 2.98;\n    this.play();\n  }\n}, false);\n\nconst bgm3 = new Audio('./assets/audio/Xeleuiem.mp3');\nbgm3.addEventListener('timeupdate', function () {\n  var buffer = .252;\n  if (this.currentTime > this.duration - buffer) {\n    this.currentTime = 9.9;\n    this.play();\n  }\n}, false);\n\nlet bgm;\nlet bgmStartTimes;\n\nfunction setBgm() {\n  if (window.difficultyLevel === 1) {\n    bgm = bgm1;\n    bgmStartTimes = bgmStartTimes1;\n  } else if (window.difficultyLevel === 2) {\n    bgm = bgm2;\n    bgmStartTimes = bgmStartTimes2;\n  } else {\n    bgm = bgm3;\n    bgmStartTimes = bgmStartTimes3;\n  }\n}\n\nsetBgm();\n\nconst setDifficulty1 = function () {\n  window.difficultyLevel = 1;\n  difficultyModifier = 1;\n  setBgm();\n  rotateSpeed = 118;\n  lineSpeed1 = 4.1;\n  lineSpeed2 = 2.1;\n  lineLifeTimer = 108;\n  ballSpeed = .088;\n};\n\nconst setDifficulty2 = function () {\n  window.difficultyLevel = 2;\n  difficultyModifier = 2;\n  setBgm();\n  rotateSpeed = 80;\n  lineSpeed1 = 5.25;\n  lineSpeed2 = 3.25;\n  lineLifeTimer = 74;\n  ballSpeed = .125;\n};\n\nconst setDifficulty3 = function () {\n  window.difficultyLevel = 3;\n  difficultyModifier = 3;\n  setBgm();\n  rotateSpeed = 59;\n  lineSpeed1 = 6.2;\n  lineSpeed2 = 4.2;\n  lineLifeTimer = 65;\n  ballSpeed = .173;\n};\n\nconst hitSound = new Audio('./assets/audio/hitSound.mp3');\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const gameCanvas = document.getElementById('game');\n  gameCanvas.height = 500;\n  gameCanvas.width = 500;\n  const canvasContext = gameCanvas.getContext('2d');\n\n  const toolsCanvas = document.getElementById('tools');\n  toolsCanvas.height = 616;\n  toolsCanvas.width = 616;\n  const toolsCanvasContext = toolsCanvas.getContext('2d');\n\n  let ui;\n\n  let game = new Game(\n    canvasContext,\n    gameCanvas,\n    toolsCanvas,\n    toolsCanvasContext,\n    ui,\n    bgm,\n    menuBgm,\n    gameOverAudio,\n    bgmStartTimes,\n    hitSound,\n    lineSpeed1,\n    lineSpeed2,\n    difficultyModifier,\n    rotateSpeed,\n    lineLifeTimer,\n    ballSpeed\n  );\n\n  mainMenu.onload = () => {\n    ui = new Ui(game, toolsCanvasContext, toolsCanvas, true, mainMenu, bgm);\n    ui.render();\n  };\n\n  window.addEventListener('keydown', checkKeyPressed, false);\n  window.addEventListener('keyup', checkKeyLifted, false);\n\n  function checkKeyPressed(event) {\n    switch (event.keyCode) {\n      case 27:\n        if (game.gameActive === true || game.gameOver === true) {\n          game.gameActive = false;\n          cancelAnimationFrame(game.frames);\n          game.ctx.clearRect(-300, -300, gameCanvas.width + 300, gameCanvas.height + 300);\n          ui.toolsCtx.clearRect(-300, -300, toolsCanvas.width + 300, toolsCanvas.height + 300);\n          ui.shouldDrawMainMenu = true;\n          game.hitSound.pause();\n          game.hitSound.currentTime = 0;\n          if (!window.muted) menuBgm.play();\n          bgm.pause();\n          bgm.currentTime = bgmStartTimes[Math.floor(Math.random() * bgmStartTimes.length)];\n          game.gameOver = false;\n        }\n\n        break;\n      case 32:\n        setBgm();\n        beginAudio.pause();\n        gameOverAudio.pause();\n        beginAudio.currentTime = 0;\n        beginAudio.play();\n        if (game.gameActive === false) {\n          game.hitSound.pause();\n          game.hitSound.currentTime = 0;\n          game = new Game(\n            canvasContext,\n            gameCanvas,\n            toolsCanvas,\n            toolsCanvasContext,\n            ui,\n            bgm,\n            menuBgm,\n            gameOverAudio,\n            bgmStartTimes,\n            hitSound,\n            lineSpeed1,\n            lineSpeed2,\n            difficultyModifier,\n            rotateSpeed,\n            lineLifeTimer,\n            ballSpeed\n          );\n          ui.game = game;\n          ui.bgm = bgm;\n          ui.shouldDrawMainMenu = false;\n          game.gameActive = true;\n          game.gameOver = false;\n          menuBgm.pause();\n          bgm.currentTime = bgmStartTimes[Math.floor(Math.random() * bgmStartTimes.length)];\n          if (!window.muted) bgm.play();\n          game.begin();\n        }\n\n        break;\n      case 37:\n        window.leftPressed = true;\n        if (ui.shouldDrawMainMenu === true) {\n          if (window.difficultyLevel === 3) {\n            setDifficulty2();\n          } else if (window.difficultyLevel === 2) {\n            setDifficulty1();\n          }\n        }\n\n        break;\n      case 39:\n        window.rightPressed = true;\n        if (ui.shouldDrawMainMenu === true) {\n          if (window.difficultyLevel === 1) {\n            if (ui.stage1Victory === true) {\n              setDifficulty2();\n            } else {\n              ui.stage3LockedDisplay = false;\n              ui.stage2LockedDisplay = true;\n            }\n          } else if (window.difficultyLevel === 2) {\n            if (ui.stage2Victory === true) {\n              setDifficulty3();\n            } else {\n              ui.stage2LockedDisplay = false;\n              ui.stage3LockedDisplay = true;\n            }\n          }\n        }\n\n        break;\n      case 49:\n        if (ui.shouldDrawMainMenu === true) {\n          setDifficulty1();\n        }\n\n        break;\n      case 50:\n        if (ui.shouldDrawMainMenu === true) {\n          if (ui.stage1Victory === true) {\n            setDifficulty2();\n          } else {\n            ui.stage3LockedDisplay = false;\n            ui.stage2LockedDisplay = true;\n          }\n        }\n\n        break;\n      case 51:\n        if (ui.shouldDrawMainMenu === true) {\n          if (ui.stage2Victory === true) {\n            setDifficulty3();\n          } else {\n            ui.stage2LockedDisplay = false;\n            ui.stage3LockedDisplay = true;\n          }\n        }\n\n        break;\n      case 77:\n        if (game.gameActive === true) {\n          if (window.muted) {\n            window.muted = false;\n            bgm.play();\n            ui.muteButtonDisplay = false;\n          } else {\n            window.muted = true;\n            bgm.pause();\n            ui.muteButtonDisplay = true;\n          }\n        } else {\n          if (window.muted) {\n            window.muted = false;\n            menuBgm.play();\n            ui.muteButtonDisplay = false;\n          } else {\n            window.muted = true;\n            menuBgm.pause();\n            ui.muteButtonDisplay = true;\n          }\n        }\n    }\n  }\n\n  function checkKeyLifted(event) {\n    switch (event.keyCode) {\n      case 37:\n        window.leftPressed = false;\n        break;\n      case 39:\n        window.rightPressed = false;\n        break;\n    }\n  }\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/escape_the_core.js\n// module id = 0\n// module chunks = 0","import Line from './line.js';\nimport Center from './center.js';\nimport Player from './player.js';\nimport Collide from 'line-circle-collision';\n\nclass Game {\n  constructor(\n    ctx,\n    gameCanvas,\n    toolsCanvas,\n    toolsCtx,\n    ui,\n    bgm,\n    menuBgm,\n    gameOverAudio,\n    bgmStartTimes,\n    hitSound,\n    lineSpeed1,\n    lineSpeed2,\n    difficultyModifier,\n    rotateSpeed,\n    lineLifeTimer,\n    ballSpeed\n  ) {\n    this.ctx = ctx;\n    this.gameCanvas = gameCanvas;\n    this.lineWidth = 10;\n\n    this.toolsCtx = toolsCtx;\n    this.toolsCanvas = toolsCanvas;\n    this.ui = ui;\n\n    this.bgm = bgm;\n    this.menuBgm = menuBgm;\n    this.bgmStartTimes = bgmStartTimes;\n    this.hitSound = hitSound;\n    this.hitSound.volume = 0.7;\n    this.gameOverAudio = gameOverAudio;\n\n    this.gameActive = false;\n    this.gameOver = false;\n    this.difficultyModifier = difficultyModifier;\n\n    this.lines = [];\n    this.lines2 = [];\n    this.frames;\n\n    this.specialLineCount = 0;\n    this.specialFlag = false;\n    this.specialLineFrequency = () => (\n      Math.floor(Math.random() * 15 - (5 * (this.difficultyModifier - 1))) + 1\n    );\n\n    this.specialLineQuantity = this.difficultyModifier === 1 ? 9 : 11;\n\n    this.startTime;\n\n    this.r = Math.floor(Math.random() * 250) + 6;\n    this.g = Math.floor(Math.random() * 250) + 6;\n    this.b = Math.floor(Math.random() * 250) + 6;\n    this.color = 'rgb(' + this.r + ',' + this.g + ',' + this.b + ')';\n\n    this.center = new Center(ctx, gameCanvas, this.difficultyModifier, 49);\n\n    this.interval = 0;\n    this.interval2 = -(lineLifeTimer / 2);\n\n    this.rotateTimer = 130;\n    this.rotateDir = 'left';\n    this.rotateSpeed = rotateSpeed;\n    this.lineSpeed1 = lineSpeed1;\n    this.lineSpeed2 = lineSpeed2;\n    this.lineLifeTimer = lineLifeTimer;\n    this.ballSpeed = ballSpeed;\n\n    this.player = new Player(ctx, gameCanvas, this.color, this.ballSpeed);\n\n    this.gameOverScreen = new Image();\n    this.gameOverScreen.src = 'assets/images/GameOver.png';\n    this.stageCompleteScreen = new Image();\n    this.stageCompleteScreen.src = 'assets/images/StageComplete.png';\n    this.gameCompleteScreen = new Image();\n    this.gameCompleteScreen.src = 'assets/images/GameComplete.png';\n  }\n\n  moveLines() {\n    this.lines.forEach(line => {\n      line.closeIn();\n    });\n    this.lines2.forEach(line => {\n      line.closeIn();\n    });\n  };\n\n  begin() {\n    this.startTime = new Date();\n    this.ui.render();\n    const animateCallback = () => {\n      this.render(this.ctx);\n      this.frames = requestAnimationFrame(animateCallback);\n    };\n\n    if (this.gameActive === true) {\n      animateCallback();\n    } else {\n      cancelAnimationFrame(frames);\n    }\n\n  };\n\n  end() {\n    this.color = 'red';\n    if (!window.muted) this.hitSound.play();\n    this.gameOverAudio.pause();\n    this.gameOverAudio.currentTime = 0;\n    this.gameOverAudio.play();\n    this.bgm.pause();\n    this.bgm.currentTime = this.bgmStartTimes[Math.floor(Math.random() * this.bgmStartTimes.length)];\n    if (!window.muted) this.menuBgm.play();\n    this.ui.drawFinalScore();\n    this.gameActive = false;\n    this.gameOver = true;\n    cancelAnimationFrame(this.frames);\n  }\n\n  choosePattern(ctx) {\n    let specialLines;\n    if (this.specialLineFrequency() === 1) {\n      switch (Math.floor(Math.random() * this.specialLineQuantity) + 1) {\n        case 1:\n          this.specialFlag = true;\n          specialLines = [\n            new Line(ctx, this.gameCanvas, 1, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n            new Line(ctx, this.gameCanvas, 3, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n            new Line(ctx, this.gameCanvas, 8, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n          ];\n          break;\n        case 2:\n          this.specialFlag = true;\n          specialLines = [\n            new Line(ctx, this.gameCanvas, 1, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n            new Line(ctx, this.gameCanvas, 8, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n          ];\n          break;\n        case 3:\n          this.specialFlag = true;\n          specialLines = [\n            new Line(ctx, this.gameCanvas, 1, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n            new Line(ctx, this.gameCanvas, 2, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n            new Line(ctx, this.gameCanvas, 6, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n            new Line(ctx, this.gameCanvas, 7, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n          ];\n          break;\n        case 4:\n          this.specialFlag = true;\n          specialLines = [\n            new Line(ctx, this.gameCanvas, 1, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n            new Line(ctx, this.gameCanvas, 2, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n            new Line(ctx, this.gameCanvas, 3, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n            new Line(ctx, this.gameCanvas, 5, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n            new Line(ctx, this.gameCanvas, 6, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n            new Line(ctx, this.gameCanvas, 7, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n          ];\n          break;\n        case 5:\n          this.specialFlag = true;\n          specialLines = [\n            new Line(ctx, this.gameCanvas, 1, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n            new Line(ctx, this.gameCanvas, 2, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n            new Line(ctx, this.gameCanvas, 3, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n            new Line(ctx, this.gameCanvas, 7, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n            new Line(ctx, this.gameCanvas, 6, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n            new Line(ctx, this.gameCanvas, 8, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n          ];\n          break;\n        case 6:\n          this.specialFlag = true;\n          specialLines = [\n            new Line(ctx, this.gameCanvas, 9, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth, this),\n          ];\n          break;\n        case 7:\n          this.specialFlag = true;\n          specialLines = [\n            new Line(ctx, this.gameCanvas, 10, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth, this),\n          ];\n          break;\n        case 8:\n          this.specialFlag = true;\n          specialLines = [\n            new Line(ctx, this.gameCanvas, 11, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth, this),\n          ];\n          break;\n        case 9:\n          this.specialFlag = true;\n          specialLines = [\n            new Line(ctx, this.gameCanvas, 12, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth, this),\n          ];\n          break;\n        case 10:\n          this.specialFlag = true;\n          specialLines = [\n            new Line(ctx, this.gameCanvas, 10, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth, this),\n            new Line(ctx, this.gameCanvas, 11, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth, this),\n          ];\n          break;\n        case 11:\n          this.specialFlag = true;\n          specialLines = [\n            new Line(ctx, this.gameCanvas, 9, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth, this),\n            new Line(ctx, this.gameCanvas, 12, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth, this),\n          ];\n          break;\n      }\n    }\n\n    if (specialLines) return specialLines;\n\n    let allDiagLines = [\n                new Line(ctx, this.gameCanvas, 1, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n                new Line(ctx, this.gameCanvas, 2, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n                new Line(ctx, this.gameCanvas, 3, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n                new Line(ctx, this.gameCanvas, 4, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n                ];\n    let allLines = [\n                new Line(ctx, this.gameCanvas, 5, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n                new Line(ctx, this.gameCanvas, 6, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n                new Line(ctx, this.gameCanvas, 7, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n                new Line(ctx, this.gameCanvas, 8, this.color, this.lineSpeed1, this.lineSpeed2, this.lineWidth),\n                ];\n    return Math.floor(Math.random() * 3) === 1 ? allDiagLines : allLines;\n  }\n\n  makePatterns(ctx) {\n    this.specialFlag = false;\n    let chosenLines = this.choosePattern(ctx);\n    if (this.interval > this.lineLifeTimer) {\n      let randNum = Math.floor(Math.random() * chosenLines.length);\n      if (Math.floor(Math.random() * this.difficultyModifier) === 0) {\n        if (this.specialFlag === false) chosenLines.splice((randNum + Math.floor((Math.random() * 3) + 1)) % 4, 1);\n      }\n\n      if (this.specialFlag === false) chosenLines.splice(randNum, 1);\n      this.specialFlag = false;\n      this.lines = chosenLines;\n      this.interval = 0;\n    } else {\n      this.interval += 1;\n    }\n\n    this.specialFlag = false;\n    let chosenLines2 = this.choosePattern(ctx);\n    if (this.interval2 > this.lineLifeTimer) {\n      let randNum2 = Math.floor(Math.random() * chosenLines2.length);\n      if (Math.floor(Math.random() * this.difficultyModifier) === 0) {\n        if (this.specialFlag === false) chosenLines2.splice((randNum2 + Math.floor((Math.random() * 3) + 1)) % 4, 1);\n      }\n\n      if (this.specialFlag === false) chosenLines2.splice(randNum2, 1);\n      this.specialFlag = false;\n      this.lines2 = chosenLines2;\n      this.interval2 = 0;\n    } else {\n      this.interval2 += 1;\n    }\n  }\n\n  checkCollision() {\n    let circle = [this.player.ball.x, this.player.ball.y];\n    let radius = this.player.ball.radius;\n    this.lines.forEach((line) => {\n      let a = line.startPoint;\n      let b = line.endPoint;\n      let hit = Collide(a, b, circle, radius);\n      if (hit === true) {\n        this.end();\n      }\n    });\n    this.lines2.forEach((line) => {\n      let a = line.startPoint;\n      let b = line.endPoint;\n      let hit = Collide(a, b, circle, radius);\n      if (hit === true) {\n        this.end();\n      }\n    });\n  }\n\n  rotate(ctx, flip) {\n    if (flip === true) this.rotateDir = this.rotateDir === 'left' ? 'right' : 'left';\n    let rotation = this.rotateDir === 'left' ? -this.rotateSpeed : this.rotateSpeed;\n    ctx.translate(this.gameCanvas.width / 2, this.gameCanvas.width / 2);\n    ctx.rotate(Math.PI / rotation);\n    ctx.translate(-this.gameCanvas.width / 2, -this.gameCanvas.width / 2);\n  }\n\n  setColor() {\n    this.r += Math.floor(Math.random() * 250) + 2;\n    this.r = this.r % 256;\n    if (this.r < 40) this.r = 40;\n\n    this.g += Math.floor(Math.random() * 250) + 2;\n    this.g = this.g % 256;\n    if (this.g < 40) this.g = 40;\n\n    this.b += Math.floor(Math.random() * 250) + 2;\n    this.b = this.b % 256;\n    if (this.b < 40) this.b = 40;\n    this.color = 'rgb(' + this.r + ',' + this.g + ',' + this.b + ')';\n  }\n\n  pulseCenter() {\n    if (window.difficultyLevel === 1) {\n      if (this.center.radius < 40) {\n        this.center.radius += 20;\n      } else {\n        this.center.radius -= .4068;\n      }\n    }\n\n    if (window.difficultyLevel === 2) {\n      if (this.center.radius < 40) {\n        this.center.radius += 20;\n      } else {\n        this.center.radius -= .513;\n      }\n    }\n\n    if (window.difficultyLevel === 3) {\n      if (this.center.radius < 47) {\n        this.center.radius += 18;\n      } else {\n        this.center.radius -= .499;\n      }\n    }\n  }\n\n  doEvilThingsToThirdStage() {\n    if (parseInt(this.ui.score) > 10 && window.difficultyLevel === 3) {\n      this.center.color = 'black';\n      if (parseInt(this.ui.score) > 20 && parseInt(this.ui.score) < 30) {\n        this.color = 'white';\n      }\n      if (parseInt(this.ui.score) > 30) {\n        this.rotateSpeed = 0;\n      }\n      if (parseInt(this.ui.score) > 35) {\n        this.rotateSpeed = 59;\n      }\n      if (parseInt(this.ui.score) > 40) {\n        this.rotateSpeed = 0;\n        this.lineWidth = 13;\n      }\n      if (parseInt(this.ui.score) > 45) {\n        this.rotateSpeed = 59;\n      }\n      if (parseInt(this.ui.score) > 50 && parseInt(this.ui.score.charAt(3)) % 2 !== 0) {\n        this.lineWidth = 1;\n        this.player.color = 'black';\n      }\n      if (parseInt(this.ui.score) > 50 && parseInt(this.ui.score.charAt(3)) % 2 === 0) {\n        this.lineWidth = 1;\n        this.player.color = 'white';\n      }\n    }\n  }\n\n  render(ctx) {\n    if (this.gameActive === true) {\n      this.makePatterns(ctx);\n\n      if (this.ui.score > 60.0) {\n        if (this.rotateSpeed > 60) this.rotateSpeed -= .05;\n        this.lineSpeed1 += .001;\n        if (this.player.ballSpeed < .17) this.player.ballSpeed += .00005;\n        this.lineSpeed2 += .001;\n        this.lineLifeTimer -= .02;\n      }\n\n      this.checkCollision();\n      ctx.clearRect(-700, -700, this.gameCanvas.width + 700, this.gameCanvas.height + 700);\n\n      if (this.rotateTimer < 1) {\n        this.rotate(ctx, true);\n        this.rotateTimer = Math.floor(Math.random() * 190) + 70;\n      } else {\n        this.rotate(ctx, false);\n        this.rotateTimer = this.rotateTimer - 1;\n      }\n\n      this.setColor();\n\n      this.doEvilThingsToThirdStage();\n\n      this.pulseCenter();\n\n      this.moveLines();\n      this.player.render(ctx);\n      this.lines.forEach((line) => {\n        line.render(ctx);\n      });\n      this.lines2.forEach((line) => {\n        line.render(ctx);\n      });\n      this.center.render(ctx);\n    } else if (this.gameOver === true) {\n      if (parseInt(this.ui.score) >= 60.0 && window.difficultyLevel === 3) {\n        this.toolsCtx.drawImage(\n          this.gameCompleteScreen,\n          this.toolsCanvas.width / 2 - this.gameCompleteScreen.width / 2,\n          this.toolsCanvas.height / 2 - this.gameCompleteScreen.height / 2\n        );\n      } else if (parseInt(this.ui.score) >= 60.0) {\n        this.toolsCtx.drawImage(\n          this.stageCompleteScreen,\n          this.toolsCanvas.width / 2 - this.stageCompleteScreen.width / 2,\n          this.toolsCanvas.height / 2 - this.stageCompleteScreen.height / 2\n        );\n      } else {\n        this.toolsCtx.drawImage(\n          this.gameOverScreen,\n          this.toolsCanvas.width / 2 - this.gameOverScreen.width / 2,\n          this.toolsCanvas.height / 2 - this.gameOverScreen.height / 2\n        );\n      }\n    }\n  };\n}\n\nexport default Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 1\n// module chunks = 0","class Line {\n  constructor(ctx, gameCanvas, type, color, lineSpeed1, lineSpeed2, lineWidth, game) {\n    this.ctx = ctx;\n    this.gameCanvas = gameCanvas;\n    this.game = game;\n    this.color = color;\n    this.x = 0;\n    this.y = 0;\n    this.halfWidth = this.gameCanvas.width / 2;\n    this.halfHeight = this.gameCanvas.height / 2;\n    this.fullWidth = this.gameCanvas.width;\n    this.fullHeight = this.gameCanvas.height;\n\n    this.lineSpeed1 = lineSpeed1;\n    this.lineSpeed2 = lineSpeed2;\n\n    this.lineWidth = lineWidth;\n    this.type = type;\n    this.handleType(type);\n    this.startPoint = [0, 0];\n    this.endPoint = [0, 0];\n  }\n\n  handleType(type) {\n    if (type === 1) {\n      this.x = -200;\n      this.y = 0;\n    } else if (type === 2) {\n      this.x = this.gameCanvas.height + 200;\n      this.y = this.gameCanvas.width;\n    } else if (type === 3) {\n      this.x = (this.gameCanvas.width / 2);\n      this.y = -200;\n    } else if (type === 4) {\n      this.x = -200;\n      this.y = this.gameCanvas.height / 2;\n    } else if (type === 5) {\n      this.x = 0;\n      this.y = 0;\n    } else if (type === 6) {\n      this.x = this.gameCanvas.width;\n      this.y = 0;\n    } else if (type === 7) {\n      this.x = 0;\n      this.y = 0;\n    } else if (type === 8) {\n      this.x = 0;\n      this.y = this.gameCanvas.height;\n    } else if (type === 9) {\n      this.x = 0;\n      this.y = this.gameCanvas.height;\n    } else if (type === 10) {\n      this.x = -200;\n      this.y = this.gameCanvas.height / 2;\n    } else if (type === 11) {\n      this.x = (this.gameCanvas.width / 2);\n      this.y = -200;\n    } else if (type === 12) {\n      this.x = 0;\n      this.y = 0;\n    }\n\n  }\n\n  closeIn() {\n    if (this.type < 5) {\n      if (this.type === 1) {\n        this.x = this.x + this.lineSpeed1;\n        this.y = this.y + this.lineSpeed1;\n      } else if (this.type === 2) {\n        this.x = this.x - this.lineSpeed1;\n        this.y = this.y - this.lineSpeed1;\n      } else if (this.type === 3) {\n        this.fullWidth = this.fullWidth - this.lineSpeed1;\n        this.y = this.y + this.lineSpeed1;\n      } else if (this.type === 4) {\n        this.x = this.x + this.lineSpeed1;\n        this.fullHeight = this.fullHeight - this.lineSpeed1;\n      }\n\n    } else {\n      if (this.type === 5) {\n        this.x = this.x + this.lineSpeed2;\n        this.y = this.y + this.lineSpeed2;\n        this.fullHeight = this.fullHeight - this.lineSpeed2;\n      } else if (this.type === 6) {\n        this.x = this.x - this.lineSpeed2;\n        this.y = this.y + this.lineSpeed2;\n        this.fullHeight = this.fullHeight - this.lineSpeed2;\n      } else if (this.type === 7) {\n        this.x = this.x + this.lineSpeed2;\n        this.y = this.y + this.lineSpeed2;\n        this.fullWidth = this.fullWidth - this.lineSpeed2;\n      } else if (this.type === 8) {\n        this.x = this.x + this.lineSpeed2;\n        this.y = this.y - this.lineSpeed2;\n        this.fullWidth = this.fullWidth - this.lineSpeed2;\n      } else if (this.type === 9) {\n        this.x = this.x + this.lineSpeed2 + 2;\n        this.y = this.y - this.lineSpeed2 - 2;\n        this.fullWidth = this.fullWidth - this.lineSpeed2 - 2;\n      } else if (this.type === 10) {\n        this.x = this.x + this.lineSpeed1 + 2;\n        this.fullHeight = this.fullHeight - this.lineSpeed1 - 2;\n      } else if (this.type === 11) {\n        this.fullWidth = this.fullWidth - this.lineSpeed1 - 2;\n        this.y = this.y + this.lineSpeed1 + 2;\n      } else if (this.type === 12) {\n        this.x = this.x + this.lineSpeed2 + 2;\n        this.y = this.y + this.lineSpeed2 + 2;\n        this.fullWidth = this.fullWidth - this.lineSpeed2 - 2;\n      }\n\n    }\n\n  }\n\n  render(ctx) {\n    ctx.beginPath();\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.lineWidth;\n    if (this.type === 1) {\n      this.startPoint = [this.x, this.halfHeight];\n      ctx.moveTo(this.x, this.halfHeight);\n      this.endPoint = [this.halfWidth, this.y - 200];\n      ctx.lineTo(this.halfWidth, this.y - 200);\n    } else if (this.type === 2) {\n      this.startPoint = [this.x, this.halfHeight];\n      ctx.moveTo(this.x, this.halfHeight);\n      this.endPoint = [this.halfWidth, this.y + 200];\n      ctx.lineTo(this.halfWidth, this.y + 200);\n    } else if (this.type === 3) {\n      this.startPoint = [this.x, this.y];\n      ctx.moveTo(this.x, this.y);\n      this.endPoint = [this.fullWidth + 200, this.halfHeight];\n      ctx.lineTo(this.fullWidth + 200, this.halfHeight);\n    } else if (this.type === 4) {\n      this.startPoint = [this.x, this.y];\n      ctx.moveTo(this.x, this.y);\n      this.endPoint = [this.halfWidth, this.fullHeight + 200];\n      ctx.lineTo(this.halfWidth, this.fullHeight + 200);\n    } else if (this.type === 5) {\n      this.startPoint = [this.x, this.y];\n      ctx.moveTo(this.x, this.y);\n      this.endPoint = [this.x, this.fullHeight];\n      ctx.lineTo(this.x, this.fullHeight);\n    } else if (this.type === 6) {\n      this.startPoint = [this.x, this.y];\n      ctx.moveTo(this.x, this.y);\n      this.endPoint = [this.x, this.fullHeight];\n      ctx.lineTo(this.x, this.fullHeight);\n    } else if (this.type === 7) {\n      this.startPoint = [this.x, this.y];\n      ctx.moveTo(this.x, this.y);\n      this.endPoint = [this.fullWidth, this.y];\n      ctx.lineTo(this.fullWidth, this.y);\n    } else if (this.type === 8) {\n      this.startPoint = [this.x, this.y];\n      ctx.moveTo(this.x, this.y);\n      this.endPoint = [this.fullWidth, this.y];\n      ctx.lineTo(this.fullWidth, this.y);\n    } else if (this.type === 9) {\n      this.startPoint = [this.x, this.y];\n      ctx.moveTo(this.x, this.y);\n      this.endPoint = [this.fullWidth, this.y];\n      ctx.lineTo(this.fullWidth, this.y);\n      this.color = this.game.color;\n    } else if (this.type === 10) {\n      this.startPoint = [this.x, this.y];\n      ctx.moveTo(this.x, this.y);\n      this.endPoint = [this.halfWidth, this.fullHeight + 200];\n      ctx.lineTo(this.halfWidth, this.fullHeight + 200);\n      this.color = this.game.color;\n    } else if (this.type === 11) {\n      this.startPoint = [this.x, this.y];\n      ctx.moveTo(this.x, this.y);\n      this.endPoint = [this.fullWidth + 200, this.halfHeight];\n      ctx.lineTo(this.fullWidth + 200, this.halfHeight);\n      this.color = this.game.color;\n    } else if (this.type === 12) {\n      this.startPoint = [this.x, this.y];\n      ctx.moveTo(this.x, this.y);\n      this.endPoint = [this.fullWidth, this.y];\n      ctx.lineTo(this.fullWidth, this.y);\n      this.color = this.game.color;\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n  }\n}\n\nexport default Line;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/line.js\n// module id = 2\n// module chunks = 0","class Center {\n  constructor(ctx, gameCanvas, difficultyModifier, radius) {\n    this.ctx = ctx;\n    this.gameCanvas = gameCanvas;\n    this.radius = radius;\n    if (difficultyModifier == 1) this.color = '#7C7C7C';\n    if (difficultyModifier == 2) this.color = '#303030';\n    if (difficultyModifier == 3) this.color = '#131313';\n  }\n\n  render(ctx) {\n    let centerX = this.gameCanvas.width / 2;\n    let centerY = this.gameCanvas.height / 2;\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, this.radius, 0, Math.PI * 2, false);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    ctx.closePath();\n  }\n}\n\nexport default Center;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/center.js\n// module id = 3\n// module chunks = 0","class Player {\n  constructor(ctx, gameCanvas, color, ballSpeed) {\n    this.ctx = ctx;\n    this.gameCanvas = gameCanvas;\n    this.color = color;\n    this.circle = {\n      centerX: this.gameCanvas.width / 2,\n      centerY: this.gameCanvas.height / 2,\n      radius: 75,\n      angle: 0,\n    };\n    this.ball = { x: 0, y: 0, speed: 0 };\n    this.ball.x = 0;\n    this.ball.y = 0;\n    this.ball.radius = 8;\n    this.ballSpeed = ballSpeed;\n  }\n\n  render(ctx) {\n\n    if (window.rightPressed) {\n      this.ball.speed = this.ballSpeed;\n    }\n\n    if (window.leftPressed) {\n      this.ball.speed = -(this.ballSpeed);\n    }\n\n    if (!window.leftPressed && !window.rightPressed) {\n      this.ball.speed = 0;\n    }\n\n    ctx.strokeStyle = this.color;\n\n    this.ball.x = this.circle.centerX + Math.cos(this.circle.angle) * this.circle.radius;\n    this.ball.y = this.circle.centerY + Math.sin(this.circle.angle) * this.circle.radius;\n\n    this.circle.angle += this.ball.speed;\n\n    ctx.fillStyle = this.color;\n    ctx.beginPath();\n    ctx.arc(this.ball.x, this.ball.y, this.ball.radius, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n  }\n}\n\nexport default Player;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/player.js\n// module id = 4\n// module chunks = 0","var pointCircleCollide = require('point-circle-collision')\n\nvar tmp = [0, 0]\n\nfunction lineCircleCollide(a, b, circle, radius, nearest) {\n    //check to see if start or end points lie within circle \n    if (pointCircleCollide(a, circle, radius)) {\n        if (nearest) {\n            nearest[0] = a[0]\n            nearest[1] = a[1]\n        }\n        return true\n    } if (pointCircleCollide(b, circle, radius)) {\n        if (nearest) {\n            nearest[0] = b[0]\n            nearest[1] = b[1]\n        }\n        return true\n    }\n    \n    var x1 = a[0],\n        y1 = a[1],\n        x2 = b[0],\n        y2 = b[1],\n        cx = circle[0],\n        cy = circle[1]\n\n    //vector d\n    var dx = x2 - x1\n    var dy = y2 - y1\n    \n    //vector lc\n    var lcx = cx - x1\n    var lcy = cy - y1\n    \n    //project lc onto d, resulting in vector p\n    var dLen2 = dx * dx + dy * dy //len2 of d\n    var px = dx\n    var py = dy\n    if (dLen2 > 0) {\n        var dp = (lcx * dx + lcy * dy) / dLen2\n        px *= dp\n        py *= dp\n    }\n    \n    if (!nearest)\n        nearest = tmp\n    nearest[0] = x1 + px\n    nearest[1] = y1 + py\n    \n    //len2 of p\n    var pLen2 = px * px + py * py\n    \n    //check collision\n    return pointCircleCollide(nearest, circle, radius)\n            && pLen2 <= dLen2 && (px * dx + py * dy) >= 0\n}\n\nmodule.exports = lineCircleCollide\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/line-circle-collision/index.js\n// module id = 5\n// module chunks = 0","function pointCircleCollision(point, circle, r) {\n    if (r===0) return false\n    var dx = circle[0] - point[0]\n    var dy = circle[1] - point[1]\n    return dx * dx + dy * dy <= r * r\n}\n\nmodule.exports = pointCircleCollision\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/point-circle-collision/index.js\n// module id = 6\n// module chunks = 0","class Ui {\n  constructor(game, toolsCtx, toolsCanvas, shouldDrawMainMenu, mainMenu, bgm) {\n    this.game = game;\n    this.toolsCtx = toolsCtx;\n    this.toolsCanvas = toolsCanvas;\n    this.score;\n    this.highScore1 = 0;\n    this.highScore2 = 0;\n    this.highScore3 = 0;\n    this.shouldDrawMainMenu = shouldDrawMainMenu;\n    this.mainMenu = mainMenu;\n    this.bgm = bgm;\n\n    this.stage2LockedDisplay = false;\n    this.muteButtonDisplay = false;\n\n    this.stage1Victory = false;\n    this.stage2Victory = false;\n    this.stage3Victory = false;\n  }\n\n  drawElapsedTime() {\n    if (this.game.gameActive === true) {\n      let elapsed = parseInt((new Date() - this.game.startTime));\n      let hundredths = (elapsed / 1000).toFixed(2);\n      if (hundredths.length < 2) hundredths = '0' + hundredths;\n      this.toolsCtx.save();\n      this.toolsCtx.beginPath();\n      this.toolsCtx.fillStyle = 'white';\n      if (parseInt(hundredths) >= 60.0) this.toolsCtx.fillStyle = 'lightgreen';\n\n      this.toolsCtx.font = '50px Orbitron';\n\n      this.toolsCtx.globalAlpha = 0.50;\n      this.toolsCtx.fillText(hundredths, this.toolsCanvas.width - 365, 60);\n      this.toolsCtx.restore();\n      this.score = hundredths;\n    }\n  }\n\n  drawFinalScore() {\n\n    if (window.difficultyLevel === 1) {\n      if (parseInt(this.score) > parseInt(this.highScore1)) {\n        this.highScore1 = this.score;\n      }\n    } else if (window.difficultyLevel === 2) {\n      if (parseInt(this.score) > parseInt(this.highScore2)) {\n        this.highScore2 = this.score;\n      }\n    } else if (window.difficultyLevel === 3) {\n      if (parseInt(this.score) > parseInt(this.highScore3)) {\n        this.highScore3 = this.score;\n      }\n    }\n\n    this.toolsCtx.save();\n    this.toolsCtx.beginPath();\n    this.toolsCtx.fillStyle = 'white';\n\n    if (parseInt(this.score) >= 60.0) {\n      this.toolsCtx.fillStyle = 'lightgreen';\n      if (window.difficultyLevel === 1) {\n        this.stage1Victory = true;\n      } else if (window.difficultyLevel === 2) {\n        this.stage2Victory = true;\n      } else if (window.difficultyLevel === 3) {\n        this.stage3Victory = true;\n      }\n    }\n\n    this.toolsCtx.font = '50px Orbitron';\n    this.toolsCtx.fillText(this.score, this.toolsCanvas.width - 365, 60);\n    this.toolsCtx.restore();\n  }\n\n  drawHighScore() {\n    if (window.difficultyLevel === 1) {\n      if (this.highScore1) {\n        this.toolsCtx.save();\n        this.toolsCtx.beginPath();\n        this.toolsCtx.fillStyle = 'white';\n        this.toolsCtx.font = '26px Orbitron';\n        this.toolsCtx.globalAlpha = 0.70;\n        this.toolsCtx.fillText('Best: ' + this.highScore1, this.toolsCanvas.width - 585, 40);\n        this.toolsCtx.restore();\n      }\n    } else if (window.difficultyLevel === 2) {\n      if (this.highScore2) {\n        this.toolsCtx.save();\n        this.toolsCtx.beginPath();\n        this.toolsCtx.fillStyle = 'white';\n        this.toolsCtx.font = '26px Orbitron';\n        this.toolsCtx.globalAlpha = 0.70;\n        this.toolsCtx.fillText('Best: ' + this.highScore2, this.toolsCanvas.width - 585, 40);\n        this.toolsCtx.restore();\n      }\n    } else if (window.difficultyLevel === 3) {\n      if (this.highScore3) {\n        this.toolsCtx.save();\n        this.toolsCtx.beginPath();\n        this.toolsCtx.fillStyle = 'white';\n        this.toolsCtx.font = '26px Orbitron';\n        this.toolsCtx.globalAlpha = 0.70;\n        this.toolsCtx.fillText('Best: ' + this.highScore3, this.toolsCanvas.width - 585, 40);\n        this.toolsCtx.restore();\n      }\n    }\n  }\n\n  drawMainMenu() {\n    this.toolsCtx.drawImage(this.mainMenu,\n      this.toolsCanvas.width / 2 - this.mainMenu.width / 2,\n      this.toolsCanvas.height / 2 - this.mainMenu.height / 2\n    );\n    this.drawDifficulty();\n  }\n\n  drawMuteButton() {\n    this.toolsCtx.beginPath();\n    this.toolsCtx.strokeStyle = 'red';\n    this.toolsCtx.lineWidth = 4;\n    this.toolsCtx.moveTo(this.toolsCanvas.width - 181, this.toolsCanvas.height - 27);\n    this.toolsCtx.lineTo(this.toolsCanvas.width - 181, this.toolsCanvas.height - 43);\n    this.toolsCtx.moveTo(this.toolsCanvas.width - 183, this.toolsCanvas.height - 43);\n    this.toolsCtx.lineTo(this.toolsCanvas.width - 156, this.toolsCanvas.height - 43);\n    this.toolsCtx.moveTo(this.toolsCanvas.width - 158, this.toolsCanvas.height - 43);\n    this.toolsCtx.lineTo(this.toolsCanvas.width - 158, this.toolsCanvas.height - 27);\n    this.toolsCtx.moveTo(this.toolsCanvas.width - 169, this.toolsCanvas.height - 43);\n    this.toolsCtx.lineTo(this.toolsCanvas.width - 169, this.toolsCanvas.height - 27);\n    this.toolsCtx.closePath();\n    this.toolsCtx.stroke();\n  }\n\n  drawDifficulty() {\n    this.toolsCtx.beginPath();\n    this.toolsCtx.lineWidth = 6;\n    if (window.difficultyLevel === 1) {\n      this.toolsCtx.strokeStyle = this.stage1Victory ? 'green' : 'blue';\n      this.toolsCtx.moveTo(10, this.toolsCanvas.height - 15);\n      this.toolsCtx.lineTo(75, this.toolsCanvas.height - 15);\n      this.toolsCtx.moveTo(10, this.toolsCanvas.height - 65);\n      this.toolsCtx.lineTo(75, this.toolsCanvas.height - 65);\n      this.toolsCtx.moveTo(13, this.toolsCanvas.height - 65);\n      this.toolsCtx.lineTo(13, this.toolsCanvas.height - 15);\n      this.toolsCtx.moveTo(72, this.toolsCanvas.height - 65);\n      this.toolsCtx.lineTo(72, this.toolsCanvas.height - 15);\n    } else if (window.difficultyLevel === 2) {\n      this.toolsCtx.strokeStyle = this.stage2Victory ? 'green' : 'blue';\n      this.toolsCtx.moveTo(85, this.toolsCanvas.height - 14);\n      this.toolsCtx.lineTo(150, this.toolsCanvas.height - 14);\n      this.toolsCtx.moveTo(85, this.toolsCanvas.height - 65);\n      this.toolsCtx.lineTo(150, this.toolsCanvas.height - 65);\n      this.toolsCtx.moveTo(88, this.toolsCanvas.height - 65);\n      this.toolsCtx.lineTo(88, this.toolsCanvas.height - 15);\n      this.toolsCtx.moveTo(147, this.toolsCanvas.height - 65);\n      this.toolsCtx.lineTo(147, this.toolsCanvas.height - 15);\n    } else if (window.difficultyLevel === 3) {\n      this.toolsCtx.strokeStyle = this.stage3Victory ? 'green' : 'blue';\n      this.toolsCtx.moveTo(162, this.toolsCanvas.height - 15);\n      this.toolsCtx.lineTo(227, this.toolsCanvas.height - 15);\n      this.toolsCtx.moveTo(162, this.toolsCanvas.height - 65);\n      this.toolsCtx.lineTo(227, this.toolsCanvas.height - 65);\n      this.toolsCtx.moveTo(165, this.toolsCanvas.height - 65);\n      this.toolsCtx.lineTo(165, this.toolsCanvas.height - 15);\n      this.toolsCtx.moveTo(224, this.toolsCanvas.height - 65);\n      this.toolsCtx.lineTo(224, this.toolsCanvas.height - 15);\n    }\n\n    this.toolsCtx.closePath();\n    this.toolsCtx.stroke();\n  }\n\n  stage2Locked() {\n    this.toolsCtx.save();\n    this.toolsCtx.beginPath();\n    this.toolsCtx.fillStyle = 'red';\n    this.toolsCtx.font = '26px Orbitron';\n    this.toolsCtx.fillText('Unlocked by completing Stage 1', 78, this.toolsCanvas.height - 230);\n    this.toolsCtx.strokeStyle = 'red';\n    this.toolsCtx.moveTo(85, this.toolsCanvas.height - 15);\n    this.toolsCtx.lineTo(150, this.toolsCanvas.height - 15);\n    this.toolsCtx.moveTo(85, this.toolsCanvas.height - 65);\n    this.toolsCtx.lineTo(150, this.toolsCanvas.height - 65);\n    this.toolsCtx.moveTo(88, this.toolsCanvas.height - 65);\n    this.toolsCtx.lineTo(88, this.toolsCanvas.height - 15);\n    this.toolsCtx.moveTo(147, this.toolsCanvas.height - 65);\n    this.toolsCtx.lineTo(147, this.toolsCanvas.height - 15);\n    this.toolsCtx.closePath();\n    this.toolsCtx.stroke();\n    this.toolsCtx.restore();\n  }\n\n  stage3Locked() {\n    this.toolsCtx.save();\n    this.toolsCtx.beginPath();\n    this.toolsCtx.fillStyle = 'red';\n    this.toolsCtx.font = '26px Orbitron';\n    this.toolsCtx.fillText('Unlocked by completing Stage 2', 78, this.toolsCanvas.height - 230);\n    this.toolsCtx.strokeStyle = 'red';\n    this.toolsCtx.moveTo(162, this.toolsCanvas.height - 15);\n    this.toolsCtx.lineTo(227, this.toolsCanvas.height - 15);\n    this.toolsCtx.moveTo(162, this.toolsCanvas.height - 65);\n    this.toolsCtx.lineTo(227, this.toolsCanvas.height - 65);\n    this.toolsCtx.moveTo(165, this.toolsCanvas.height - 65);\n    this.toolsCtx.lineTo(165, this.toolsCanvas.height - 15);\n    this.toolsCtx.moveTo(224, this.toolsCanvas.height - 65);\n    this.toolsCtx.lineTo(224, this.toolsCanvas.height - 15);\n    this.toolsCtx.closePath();\n    this.toolsCtx.stroke();\n    this.toolsCtx.restore();\n  }\n\n  render() {\n    const animateCallback = () => {\n      this.toolsCtx.clearRect(0, 0, this.toolsCanvas.width, this.toolsCanvas.height);\n      this.shouldDrawMainMenu === true ? this.drawMainMenu() : null;\n      this.game.gameOver === false ? this.drawElapsedTime() : this.drawFinalScore();\n      if (this.highScore1 > 0 || this.highScore2 > 0 || this.highScore3 > 0) this.drawHighScore();\n\n      if (this.stage2LockedDisplay === true) {\n        this.stage2Locked();\n        setTimeout(() => (this.stage2LockedDisplay = false), 1500);\n      }\n\n      if (this.stage3LockedDisplay === true) {\n        this.stage3Locked();\n        setTimeout(() => (this.stage3LockedDisplay = false), 1500);\n      }\n\n      if (this.muteButtonDisplay === true) {\n        this.drawMuteButton();\n      }\n\n      this.frames = requestAnimationFrame(animateCallback);\n    };\n\n    animateCallback();\n\n  }\n}\n\nexport default Ui;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/ui.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}